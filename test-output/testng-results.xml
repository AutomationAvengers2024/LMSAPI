<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="62" passed="41" failed="21" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-14T16:59:22 EST" name="Default suite" finished-at="2025-02-14T16:59:58 EST" duration-ms="35890">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-02-14T16:59:22 EST" name="Default test" finished-at="2025-02-14T16:59:58 EST" duration-ms="35890">
      <class name="Runner.CucumberRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:22 EST" name="setUpClass" finished-at="2025-02-14T16:59:23 EST" duration-ms="779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@13b409bb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:23 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:26 EST" duration-ms="2912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:26 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:26 EST" duration-ms="430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:26 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:27 EST" duration-ms="418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:27 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:28 EST" duration-ms="929" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [201]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [201]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:28 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:28 EST" duration-ms="419" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:28 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:29 EST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:29 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:29 EST" duration-ms="422" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:29 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:29 EST" duration-ms="432" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:29 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:30 EST" duration-ms="420" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:30 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:30 EST" duration-ms="409" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:30 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:31 EST" duration-ms="400" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:31 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:31 EST" duration-ms="407" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:31 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:31 EST" duration-ms="409" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:107)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:31 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:32 EST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:32 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:32 EST" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:32 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:33 EST" duration-ms="440" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [201] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [201] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_corresponding_status_code_and_status_line(postUser.java:98)
at ✽.The API should return corresponding status code and status line(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:33 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:33 EST" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:33 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:33 EST" duration-ms="342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with invalid url"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:33 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:34 EST" duration-ms="441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with invalid create user endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:34 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:34 EST" duration-ms="265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:34 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:35 EST" duration-ms="400" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with only mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [201] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [201] but found [409]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_the_status_code_created(postUser.java:190)
at ✽.The Api should return the status code 201 Created(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:48)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:35 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:35 EST" duration-ms="398" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request without mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [400] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [400] but found [500]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.postUser.the_api_should_return_the_status_code_bad_request(postUser.java:201)
at ✽.The Api should return the status code 400 Bad Request(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/APost.feature:53)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:35 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:35 EST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing POST request with existing emailid and contactnumber"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing POST request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:35 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:39 EST" duration-ms="3242" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["GET all users successfully"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get request in UserApi"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'The API should return a status code 200 and all the users with expected json response body' is undefined.
You can implement this step using the snippet(s) below:

@Then("The API should return a status code {int} and all the users with expected json response body")
public void the_api_should_return_a_status_code_and_all_the_users_with_expected_json_response_body(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'The API should return a status code 200 and all the users with expected json response body' is undefined.
You can implement this step using the snippet(s) below:

@Then("The API should return a status code {int} and all the users with expected json response body")
public void the_api_should_return_a_status_code_and_all_the_users_with_expected_json_response_body(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:39 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:39 EST" duration-ms="455" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["GET request user by user firstname"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get request in UserApi"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'The API should return a status code 200 OK' is undefined.
You can implement this step using the snippet(s) below:

@Then("The API should return a status code {int} OK")
public void the_api_should_return_a_status_code_ok(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'The API should return a status code 200 OK' is undefined.
You can implement this step using the snippet(s) below:

@Then("The API should return a status code {int} OK")
public void the_api_should_return_a_status_code_ok(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:39 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:39 EST" duration-ms="400" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get request by user id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get request in UserApi"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'The API should return a status code 200 OK' is undefined.
You can implement this step using the snippet(s) below:

@Then("The API should return a status code {int} OK")
public void the_api_should_return_a_status_code_ok(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'The API should return a status code 200 OK' is undefined.
You can implement this step using the snippet(s) below:

@Then("The API should return a status code {int} OK")
public void the_api_should_return_a_status_code_ok(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:39 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:43 EST" duration-ms="3184" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve all users with invalid url"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get request in UserApi"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [404] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [404] but found [200]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.getUser.the_api_should_return_a_status_code_not_found(getUser.java:84)
at ✽.The API should return a status code 404 Not Found(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/BGet.feature:22)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:43 EST" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve all users without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get request in UserApi"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin create Get request with  invalid credential' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin create Get request with  invalid credential")
public void admin_create_get_request_with_invalid_credential() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin create Get request with  invalid credential' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin create Get request with  invalid credential")
public void admin_create_get_request_with_invalid_credential() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:43 EST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:43 EST" duration-ms="394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:44 EST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:44 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:44 EST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:44 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:45 EST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:45 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:45 EST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:45 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:45 EST" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:45 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:46 EST" duration-ms="435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:46 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:46 EST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:46 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:47 EST" duration-ms="419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:47 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:47 EST" duration-ms="408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:47 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:48 EST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:48 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:48 EST" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:48 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:48 EST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:48 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:49 EST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:49 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:49 EST" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:49 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:50 EST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:50 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:50 EST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:50 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:50 EST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:50 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:51 EST" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:51 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:51 EST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:51 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:52 EST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:52 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:52 EST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:52 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:52 EST" duration-ms="408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:52 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:53 EST" duration-ms="430" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [409] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [409] but found [500]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.putUser.the_api_should_return_corresponding_status_code(putUser.java:80)
at ✽.The API should return corresponding status code(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/CPut.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:53 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:53 EST" duration-ms="404" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with valid and invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [409] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [409] but found [400]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.putUser.the_api_should_return_corresponding_status_code(putUser.java:80)
at ✽.The API should return corresponding status code(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/CPut.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:53 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:53 EST" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with invalid url"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:53 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:54 EST" duration-ms="18" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request with invalid create user endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: userId.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: userId.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1263)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1369)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1147)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1369)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:46)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:46)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1686)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1369)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1692)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1369)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:184)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1369)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:268)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at stepdefinition.putUser.admin_sends_a_put_request_to_the_invalid_endpoint(putUser.java:120)
at ✽.Admin sends a PUT request to the invalid endpoint(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/CPut.feature:45)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:54 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:54 EST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing PUT request without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing PUT request in UserAPI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:54 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:54 EST" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successfully delete an existing user with userid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Delete request in User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:54 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:55 EST" duration-ms="391" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successfully delete an existing user with user firstName"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Delete request in User API"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code doesn't match expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code doesn't match expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at Utilities.Assertion.validateStatusCode(Assertion.java:27)
at stepdefinition.deleteUser.the_api_should_return_a_status_code_and_the_user_record_should_be_deleted(deleteUser.java:39)
at ✽.The API should return a status code 200 and the user record should be deleted(file:///C:/Users/karth/eclipse-workspace/UserAPI/src/test/resources/Features/Delete.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:55 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:55 EST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Try to delete a non-existent user"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Delete request in User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:55 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:55 EST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing Delete request with invalid url"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Delete request in User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:55 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-14T16:59:56 EST" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing delete request without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Delete request in User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.CucumberRunner@5ffead27]" started-at="2025-02-14T16:59:56 EST" name="tearDownClass" finished-at="2025-02-14T16:59:58 EST" duration-ms="2544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.CucumberRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
